//Blidar Alexandra, gr2121, sg1, lab4, pb 4
/*Scrieți o clasă Java numită Persoană cu atributele private: nume (String), latitudine și longitudine (float). Clasa 
conține un constructor explicit fără parametri care inițializează numele cu null și latitudinea și longitudinea cu 0. 
Metoda finalize() va fi implementată pentru a afișa un mesaj la distrugerea obiectelor. Atributele clasei se pot 
modifica prin metodele mutator specifice setNume(), setLatitudine() și setLongitudine(). Atributele vor fi 
returnate prin metode accesor specifice. Instanțiați n obiecte, citiți și setati valorile atributelor, apoi afișați 
datele tuturor obiectelor.
*/

import java.util.Scanner;
import java.util.StringTokenizer;

public class Persoana {
	private static Scanner dis;
	private String nume;
	private float latitudine, longitudine;
	
	Persoana()
	{
		nume = null;
		longitudine =0;
		latitudine = 0;
	}
	public void setNume(String s)
	{
		nume = new String(s);
	}
	public void setLatitudine(float a)
	{
		latitudine = a;
	}
	public void setLongitudine(float a)
	{
		longitudine = a;
	}
	public String getNume()
	{
		return nume;
	}
	public float getLatitudine()
	{
		return latitudine;
	}
	public float getLongitudine()
	{
		return longitudine;
	}
	
	public void finalize(){
	
		System.out.println("Obiect distrus.\n");
	}
	
public static void main(String[] args)
	{
	dis = new Scanner(System.in);
	System.out.println("Dati n: ");
	int n =  dis.nextInt();
	Persoana[] P = new Persoana[n];
	
	System.out.println("Dati obiectele: ");
	dis.nextLine();
	
	for(int i = 0 ; i < n; i ++)
	{
		P[i] = new Persoana();
		String s = dis.nextLine();
		StringTokenizer sss = new StringTokenizer(s," ");
		
			if(sss.hasMoreTokens())
				P[i].setNume((String)sss.nextToken());
				
			if(sss.hasMoreTokens())
			 P[i].setLatitudine(Float.valueOf(sss.nextToken()));
			
			
			if(sss.hasMoreTokens())
			P[i].setLongitudine(Float.valueOf(sss.nextToken()));
			
	}
	
	
	for(int i = 0 ; i < n; i ++)
	{

		System.out.println("Nume: " +P[i].getNume());
		
		System.out.println("Latitudine: "+P[i].getLatitudine());
		
		System.out.println("Longitudine: "+P[i].getLongitudine());
		if (null != P[i]) {
	        P[i].finalize();
	        P[i]=null;
	    }
		
	}
	
	
	}
}




//Blidar Alexandra, gr2121, sg1, lab4, pb6
/*Definiți un șir unidimensional de valori de tip char, având numărul mai mic sau cel mult egal cu un n citit de la 
tastatură. Fiecare valoare conține valori alfa-numerice generate aleator. Transformați șirul de caractere într-un 
obiect de tip String. Afișați valoarea inițială și apoi valoarea obținută prin înlocuirea fiecărui caracter numeric cu 
‘*’. 
*/

import java.util.Scanner;
import java.util.Random;

public class Inlocuire {

	private static Scanner inner = new Scanner(System.in);
private static Random rand = new Random();

public static void main(String[] args)
	{
		System.out.println("Dati n: ");
			int n = 0;
			n = inner.nextInt();
			
			char[] ch = new char[n];
		 for(int i = 0 ; i < n; i ++)
			 ch[i] = (char)(rand.nextInt('Z')+48);
		 
		 String s = new String(ch);
		 System.out.println("\nValoarea initiala este: " + s);
		 
		s= new String(s.replaceAll("[a-zA-Z]", "*"));
		 
		 System.out.println("\nValoarea modificata este: " + s);
	}
}




//Blidar Alexandra, gr2121, sg1, lab4, pb7
/*Scrieți o aplicație care definește o clasă denumită Copil . Definiți metodele și variabilele membre ale acestei clase 
pentru următoarele acțiuni/caracteristici.
- numele copilului
- data nașterii
- copilul știe să se prezinte: ”Salut, numele meu este ...”
- copilul știe să spună câti ani are
- copilul știe să adune două numere mai mici decât 10 și să returneze rezultatul sub forma: ”Suma lui X și Y este Z”
- copilul poate să spună alfabetul în forma directă, cât și inversă
- copilul știe să spună “La revedere”
- copilul știe să coloreze o tablă de șah de dimensiune dată folosind culori alternative (pentru culori folosiți 
simbolurile 1 și 0) 
- copilul știe să joace X-0 singur 😊 (!!! Folosiți aplicația realizată în tema anterioară)
Precizări: numele copilului și data sa de naștere nu pot fi accesate din afara clasei. 
Toate informațiile despre un Copil vor fi completate cu ajutorul unui obiect de tip Copil, prin intermediul 
variabilelor și a metodelor corespunzătoare acestui obiect. 
Interacțiunea cu un copil se va face tot prin intermediul unui obiect instanțiat în main().
*/

import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.Random;
public class Copil {
	public static Scanner inner;
	private String nume,data = new String();
	
	public void setNume(String name) {
		nume = new String(name);
	}
	public String getNume() {
		return nume;
	}
	public void setData(int an,int luna,int zi)
	{
	data = new String(Integer.toString(an));
	data.concat(" ");
	data.concat(Integer.toString(luna));
	data.concat(" ");
	data.concat(Integer.toString(zi));

	}
	
	public String getData() {
		return data;
	}
	
	public void prezentare() {
		System.out.println("Salut, numele meu este " + nume);
	}
	public void varsta() {
		StringTokenizer sir = new StringTokenizer(data," ");
		int an = 2019; 
		if(sir.hasMoreTokens())
		an=2019-Integer.parseInt(sir.nextToken());
		System.out.println("Eu am " + an + " ani.");
	}
	public void adunare(int X,int Y)
	{
		if(X > 10 && Y > 10)
			System.out.println("Nu stiu sa adun aceste numere.");
		else {
		int s= X+Y;
		System.out.println("Suma lui " + X + " si a lui " + Y + " este " + s);
		}
	}
	public void alfabet()
	{
		String sir = new String("abcdefghijklmnqoprstuvxywz");
		StringBuilder s = new StringBuilder(sir);
		
		System.out.println("Alfabetul in ordine directa: " + sir);
		System.out.println("Alfabetul in ordine inversa: "+ s.reverse()); 
	}
	
	public void laRevedere() {
		System.out.println("La revedere! ");
	}
	
	public void colorareTablaSah(int n) {
		int mat[][] = new int[n][n];
		
		for(int i = 0 ; i < n; i ++)
			for(int j = 0; j < n; j ++)
				mat[i][j]=(i+j)%2;
		
	System.out.println("\nTabla de sah este\n");
	for(int i = 0 ; i < n ; i ++)
	{
		for(int j = 0 ; j < n ;j ++)
			System.out.print(mat[i][j]+ " ");
		System.out.println();
	}
	}
	
	public void jocXO()
	{
		XO_Games oc = new XO_Games();
		int n,m;
		System.out.println("Introduceti dimensiunile matricei: ");
		n=inner.nextInt();
		m=inner.nextInt();	
		int vec_A[]=new int[n];
		int vec_B[]=new int [m];
			char[][] mat = new char[n][m];
			for(int i = 0 ; i < n; i ++)
				for(int j = 0; j < m; j ++)
					mat[i][j]='*';
			
		 	Random rand = new Random();
			int a = rand.nextInt(n), b = rand.nextInt(m),alege = rand.nextInt(2);
		 	char ch;
	 		if(alege == 0)
	 		    ch = 'X';
	 		else ch = 'O';
	 		oc.afisare(mat,n,m);
	 		int nr = 0;
	while(oc.castigator(mat,'X',n,m) == 0 && oc.castigator(mat,'O',n,m) == 0 && nr <n*m)
	{
	 	do{
	 	a= rand.nextInt(n);
	 	b = rand.nextInt(m);
	 	}while(oc.validare(mat,a,b) == false);
	 	
	 	if(oc.validare(mat,a,b) == true)
	 		{if(ch == 'X')
	 	 		ch = 'O';
	 	 	else ch = 'X';
	 	 	
	 		mat[a][b] = ch;
	 		System.out.print("\n\n");
	 	   oc.afisare(mat,n,m);
	 	    nr++;
	 		}

	}
	if(oc.castigator(mat,'X',n,m) == 1)
		System.out.println("\nX a castigat. ");
	else if(oc.castigator(mat,'O',n,m) == 1) 
		System.out.println("\nO a castigat. ");
	else if( oc.castigator(mat,'X',n,m) == 0 && oc.castigator(mat,'O',n,m)==0)
		System.out.println("\nRemiza!");
	}
	
	
	public static void main(String[] args)
	{
	
		Copil copil = new Copil();
		inner = new Scanner(System.in);
		
		System.out.print("Numele copilului este: ");
	    copil.setNume(inner.nextLine());
	    
	    int an=0,luna=0,zi=0;
	    System.out.println("Anul nasterii: ");
	    an = inner.nextInt();
	    System.out.println("Luna nasterii: ");
	    luna =inner.nextInt();
	    System.out.println("Ziua nasterii: ");
	    zi = inner.nextInt();
	    copil.setData(an, luna, zi);
	   
	    copil.prezentare();
	  copil.varsta();  
	    int a,b;
	    System.out.println("Introduceti 2 numere mai mici decat 10: ");
	    a= inner.nextInt();
	    b= inner.nextInt();
	    copil.adunare(a, b);
	    copil.alfabet();
	    
	    System.out.println("\nDati dimensiunea tablei de sah: ");
	    a = inner.nextInt();
	    copil.colorareTablaSah(a);
	    
	    copil.jocXO();
	    copil.laRevedere();
	}
}